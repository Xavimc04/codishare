generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                  @id @default(autoincrement())
  email               String               @unique
  name                String?
  alias               String?
  password            String
  email_verified      Boolean              @default(false)
  role                Role                 @default(USER)
  seniority           Seniority?
  stack               Stack?
  icon                String?              
  banner              String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @default(now()) @updatedAt
  resetPasswordTokens ResetPasswordToken[]
  devices             Device[]

  @@map("users")
}

model Device {
  id        Int         @id @default(autoincrement())
  userId    Int
  device    DeviceType?
  agent     String?
  model     String?
  browser   String?
  os        String?
  ip        String?
  createdAt DateTime    @default(now())
  user      User        @relation(fields: [userId], references: [id])

  @@index([userId], map: "user_devices_userId_fkey")
  @@map("user_devices")
}

model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @db.LongText
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("blacklisted_tokens")
}

model ResetPasswordToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @db.LongText
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "reset_password_tokens_userId_fkey")
  @@map("reset_password_tokens")
}

enum Role {
  ADMIN
  USER
}

enum Seniority {
  TRAINEE
  JUNIOR
  MID
  SENIOR
}

enum Stack {
  FRONTEND
  BACKEND
  FULLSTACK
}

enum DeviceType {
  CONSOLE
  MOBILE
  TABLET
  SMARTTV
  WEARABLE
  EMBEDDED
  UNKNOWN
}
